image: python:{{ cookiecutter.python_version }}
variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

stages:
  - test
  - pre-publish
  - publish

test:lint:
  stage: test
  script:
    - pip install tox
    - make lint

test:format:
  stage: test
  script:
    - pip install tox
    - make format-check

.test:unit-tests:
  stage: test
  except:
    - master
  before_script:
    - pip install tox

test:unit-tests:py36:
  stage: test
  image: python:3.6
  extends: ".test:unit-tests"
  script:
    - make tests PY=py36

test:unit-tests:py37:
  stage: test
  image: python:3.7
  extends: ".test:unit-tests"
  script:
    - make tests PY=py37

test:unit-tests:py38:
  stage: test
  image: python:3.8
  extends: ".test:unit-tests"
  script:
    - make tests PY=py38

test:check-manifest:
  stage: test
  only:
    - /^release/.*$/
  script:
    - pip install tox
    - make check-manifest

publish_package:staging:
  stage: pre-publish
  only:
    - /^release/.*$/
  variables:
    TWINE_USERNAME: $PYPI_STAGING_USERNAME
    TWINE_PASSWORD: $PYPI_STAGING_PASSWORD
  script:
    - pip install tox
    - make pypi-check
    - make pypi-upload -- --repository-url https://test.pypi.org/legacy/

publish-package:production:
  stage: publish
  only:
    - /^release/.*$/
  variables:
    TWINE_USERNAME: $PYPI_PRODUCTION_USERNAME
    TWINE_PASSWORD: $PYPI_PRODUCTION_PASSWORD
  script:
    - pip install tox
    - make pypi-check
    - make pypi-upload

publish-docker:
  stage: publish
  image: docker
  before_script:
    - apk add python3-dev py3-setuptools
    - python3 setup.py sdist
  script:
    - export VERSION_TAG=$(cat setup.py | grep version | head -1 | awk -F= '{ print $2 }' | sed 's/[",]//g' | tr -d "'")
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build -t ${CI_REGISTRY_IMAGE}:latest -t ${CI_REGISTRY_IMAGE}:${VERSION_TAG}  .
    - docker push ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:${VERSION_TAG}
